# Minimal CI workflow
# Run when someone opens a PR and adds commits to the PR (this is recognized as a push to master)
# Includes basic checks and unit/integration checks on Linux only

name: Minimal CI

env:
  # Environment variables used by toolchain
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

  # Local variables
  # Note: using variables is limited at the moment, see https://github.com/actions/runner/issues/480
  GODOT_VER: "3.4.1"

  # Don't use more features like "gdnative_bindings_generator/debug" to keep CI truly minimal
  GDRUST_FEATURES: "gdnative/async,gdnative/serde"

on:
  pull_request:
    branches:
      - master

defaults:
  run:
    shell: bash

# If a new commit is pushed before the old one's CI has completed (on the same branch), abort previous run
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Install Rust"
        uses: ./.github/composite/rust
        with:
          rust: stable
          components: rustfmt
      - name: "Check rustfmt"
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    steps:
      - uses: actions/checkout@v3
      - name: "Install Rust"
        uses: ./.github/composite/rust
        with:
          rust: stable
          components: clippy
      - name: "Check clippy"
        run: cargo clippy --workspace --features ${GDRUST_FEATURES} -- -D clippy::style -D clippy::complexity -D clippy::perf -D clippy::dbg_macro -D clippy::todo -D clippy::unimplemented

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Install Rust"
        uses: ./.github/composite/rust
      - name: "Compile tests"
        run: cargo test --workspace --features ${GDRUST_FEATURES} --no-run
      - name: "Test"
        run: cargo test --workspace --features ${GDRUST_FEATURES}

  integration-test-godot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Run Godot integration test"
        uses: ./.github/composite/godot
        with:
          godot_ver: ${{ env.GODOT_VER }}

# Not really needed, since bors is not involved. Just needs an extra runner and makes the tests run longer.

#  ci-success:
#    if: success()
#    needs:
#      - rustfmt
#      - clippy
#      - unit-test
#      - integration-test-godot
#    runs-on: ubuntu-latest
#    steps:
#      - name: Mark the job as a success
#        run: exit 0
