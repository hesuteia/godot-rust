name: "Publish to crates.io"

on:
  push:
    branches:
      - '!**'
    tags:
      - '0.11.[0-9]+-?*'

env:
  # Note: used for test and clippy, not for publish
  GDRUST_FEATURES: "gdnative/async,gdnative/serde,gdnative_bindings_generator/debug"

  # Crates to publish -- important, this doesn't work when there are spaces in any of the paths!
  GDRUST_CRATES: >
    impl/proc-macros
    gdnative-sys
    gdnative-derive
    gdnative-core
    bindings-generator
    gdnative-bindings
    gdnative-async
    gdnative

defaults:
  run:
    shell: bash

jobs:
  validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # sed: https://unix.stackexchange.com/a/589584
      - name: "Interpret tag version"
        run: |
          version=$(echo "$GITHUB_REF" | sed -n "s#refs/tags/\(.*\)#\1#p")
          [ -z "$version" ] && {
            printf "\nError: Failed to parse '$GITHUB_REF'.\n"
            exit 2
          }
          
          echo "Published version: $version"
          echo "GDRUST_PUBLISHED_VERSION=$version" >> $GITHUB_ENV

      - name: "Verify that Cargo.toml versions match ${{ env.GDRUST_PUBLISHED_VERSION }}"
        run: |
          echo "Checking crate versions..."
          
          # Check if each Cargo.toml has that version
          IFS=' ' read -r -a publishedCrates <<< "$GDRUST_CRATES"
          for crate in "${publishedCrates[@]}"; do
            readVersion=$(grep -Po '^version = "\K[^"]*' "$crate/Cargo.toml")
            printf "* $crate -> $readVersion"
          
            if [[ "$readVersion" != "$GDRUST_PUBLISHED_VERSION" ]]; then
              printf "     ERROR\n"
              versionMismatch="1"
            else
              printf "\n"
            fi
          done
          
          if [[ -n "$versionMismatch" ]]; then
            printf "\nError: At least one crate has a version mismatching the git tag.\n"
            exit 2
          else
            printf "\nAll versions OK.\n"
          fi

  test:
    runs-on: ubuntu-latest
    needs: validation
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: "Compile tests"
        run: cargo test --workspace --features ${GDRUST_FEATURES} --no-run
      - name: "Test"
        run: cargo test --workspace --features ${GDRUST_FEATURES}

  clippy:
    runs-on: ubuntu-latest
    needs: validation
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - name: "Check clippy"
        run: cargo clippy --workspace --features ${GDRUST_FEATURES} -- -D clippy::style -D clippy::complexity -D clippy::perf -D clippy::dbg_macro -D clippy::todo -D clippy::unimplemented

  rustfmt:
    runs-on: ubuntu-latest
    needs: validation
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: "Check rustfmt"
        run: cargo fmt --all -- --check

  publish:
    runs-on: ubuntu-latest
    environment: Deploy
    needs: [test, clippy, rustfmt]
    steps:
      # Note: we cannot dry-run the publishing, since crates depend on each other, and dry-run will fail if they aren't yet on crates.io.
      # Sleep to leave crates.io and docs.rs some time to index the dependencies, before releasing dependents.
      - uses: actions/checkout@v3
      - name: "Execute crates.io publishing"
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: |
          IFS=' ' read -r -a publishedCrates <<< "$GDRUST_CRATES"
          for crate in "${publishedCrates[@]}"; do
            echo "Publish $crate..."
            (cd "$crate" && cargo publish) || {
              printf "\nError: Failed to publish $crate\n"
              exit 2
            }
            echo "Wait..."
            sleep 40s
          done
